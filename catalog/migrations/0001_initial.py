# Generated by Django 3.1 on 2020-10-28 07:09

import catalog.models.breadcrumbed
import catalog.models.products
from django.db import migrations, models
import django.db.models.deletion



class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('icecat_id', models.PositiveBigIntegerField(blank=True, db_index=True, default=None, null=True, verbose_name='icecat id')),
            ],
            options={
                'verbose_name': 'Attributes group',
                'verbose_name_plural': 'Attributes groups',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='name')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
                ('icecat_id', models.PositiveBigIntegerField(blank=True, db_index=True, default=None, null=True, verbose_name='icecat id')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
            bases=(models.Model, catalog.models.breadcrumbed.BreadcrumbedObject),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('name_en', models.CharField(max_length=200, verbose_name='name at english')),
                ('descr', models.TextField(blank=True, null=True, verbose_name='description')),
                ('descr_en', models.TextField(blank=True, null=True, verbose_name='description at english')),
                ('image_url', models.CharField(blank=True, max_length=200, null=True, verbose_name='image url')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
                ('icecat_id', models.PositiveBigIntegerField(blank=True, db_index=True, default=None, null=True, verbose_name='icecat id')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
            bases=(models.Model, catalog.models.breadcrumbed.BreadcrumbedObject),
        ),
        migrations.CreateModel(
            name='MeasureUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('icecat_id', models.PositiveBigIntegerField(blank=True, db_index=True, default=None, null=True, verbose_name='icecat id')),
            ],
            options={
                'verbose_name': 'Measure Unit',
                'verbose_name_plural': 'Measure Units',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_num', models.CharField(blank=True, max_length=100, null=True, verbose_name='part numer')),
                ('name', models.CharField(max_length=500, verbose_name='name')),
                ('_title', models.CharField(blank=True, default=None, max_length=500, null=True, verbose_name='title')),
                ('printstore_id', models.BigIntegerField(blank=True, db_index=True, default=None, null=True, verbose_name='PrintStore id')),
                ('profile_id', models.BigIntegerField(blank=True, db_index=True, default=None, null=True, verbose_name='PrintStore profile id')),
                ('icecat_id', models.BigIntegerField(blank=True, db_index=True, default=None, null=True, verbose_name='icecat id')),
                ('icecat_category_id', models.BigIntegerField(blank=True, db_index=True, default=None, null=True, verbose_name='icecat category id')),
                ('slug', models.SlugField(max_length=500, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='products', related_query_name='product', to='catalog.brand', verbose_name='brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='products', related_query_name='product', to='catalog.category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Product',
            },
            bases=(models.Model, catalog.models.breadcrumbed.BreadcrumbedObject),
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.CharField(max_length=200, unique=True, verbose_name='slug')),
                ('type', models.IntegerField(choices=[(0, 'enum'), (1, 'string'), (2, 'float'), (3, 'boolean'), (4, 'integer'), (5, 'set')], verbose_name='atttribute type')),
                ('icecat_id', models.PositiveBigIntegerField(blank=True, db_index=True, default=None, null=True, verbose_name='icecat id')),
                ('unique_values_count', models.PositiveIntegerField(blank=True, db_index=True, default=0, help_text='calculatable statistics field', null=True, verbose_name='unique values count')),
                ('used_values_count', models.PositiveIntegerField(blank=True, db_index=True, default=0, help_text='calculatable statistics field', null=True, verbose_name='total values count')),
                ('used_values_type', models.PositiveIntegerField(blank=True, choices=[(0, 'enum'), (1, 'string'), (2, 'float'), (3, 'boolean'), (4, 'integer'), (5, 'set')], db_index=True, default=None, help_text='calculatable statistics field', null=True, verbose_name='used values type')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='catalog.measureunit', verbose_name='measure unit')),
            ],
            options={
                'verbose_name': 'Product attribute',
                'verbose_name_plural': 'Product attributes',
            },
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('printstore_id', models.BigIntegerField(blank=True, default=None, null=True, verbose_name='PrintStore id')),
                ('order', models.IntegerField(default=0, verbose_name='sort order')),
            ],
            options={
                'verbose_name': 'Slot',
                'verbose_name_plural': 'Slots',
            },
        ),
        migrations.CreateModel(
            name='SlotAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.CharField(max_length=200, unique=True, verbose_name='slug')),
                ('type', models.IntegerField(choices=[(0, 'enum'), (1, 'string'), (2, 'float'), (3, 'boolean'), (4, 'integer'), (5, 'set')], verbose_name='atttribute type')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='catalog.measureunit', verbose_name='measure unit')),
            ],
            options={
                'verbose_name': 'Slot attribute',
                'verbose_name_plural': 'Slot attributes',
            },
        ),
        migrations.CreateModel(
            name='StopWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', catalog.models.products.UpperCharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SlotAttributeChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200, verbose_name='value')),
                ('order', models.IntegerField(default=0, verbose_name='sort order')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.slotattribute', verbose_name='attribute')),
            ],
            options={
                'verbose_name': 'Slot attribute choice',
                'verbose_name_plural': 'Slot attribute choices',
            },
        ),
        migrations.CreateModel(
            name='ProductToProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_base', models.IntegerField(default=1)),
                ('number_related', models.IntegerField(default=1)),
                ('product_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_a', related_query_name='relation_a', to='catalog.product')),
                ('product_related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations_b', related_query_name='relation_b', to='catalog.product')),
                ('slot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='catalog.slot')),
            ],
            options={
                'unique_together': {('product_base', 'product_related')},
            },
        ),
        migrations.CreateModel(
            name='ProductIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_data', models.TextField(db_index=True, max_length=30)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indexes', related_query_name='index', to='catalog.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external', models.URLField(verbose_name='external image url')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', related_query_name='image', to='catalog.product')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=200, verbose_name='value')),
                ('order', models.IntegerField(default=0, verbose_name='sort order')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', related_query_name='choice', to='catalog.productattribute', verbose_name='attribute')),
            ],
            options={
                'verbose_name': 'Product attribute choice',
                'verbose_name_plural': 'Product attribute choices',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='related_products',
            field=models.ManyToManyField(blank=True, related_name='related_products_reverse', related_query_name='related_product_reverse', through='catalog.ProductToProduct', to='catalog.Product', verbose_name='related products'),
        ),
        migrations.CreateModel(
            name='CategoryToProductAttributeRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use_in_filters', models.BooleanField(default=True, verbose_name='use in filters')),
                ('show_at_product_page', models.BooleanField(default=True, verbose_name='show at product page')),
                ('include_in_full_text_index', models.BooleanField(default=True, help_text='include in full text index', verbose_name='full text')),
                ('order', models.IntegerField(default=0, verbose_name='sort order')),
                ('main_attribute', models.BooleanField(default=False, verbose_name='main attribute')),
                ('main_relation_attribute', models.BooleanField(default=False, verbose_name='main relation attribute')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ctpa_relations', related_query_name='ctpa_relation', to='catalog.productattribute')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ctpa_relations', related_query_name='ctpa_relation', to='catalog.category')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalog.attributegroup')),
            ],
            options={
                'unique_together': {('category', 'attribute')},
            },
        ),
        migrations.AddField(
            model_name='category',
            name='attributes',
            field=models.ManyToManyField(blank=True, through='catalog.CategoryToProductAttributeRelation', to='catalog.ProductAttribute', verbose_name='attributes'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='childs', related_query_name='child', to='catalog.category', verbose_name='parent category'),
        ),
        migrations.CreateModel(
            name='SlotAttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('int_value', models.BigIntegerField(blank=True, db_index=True, null=True, verbose_name='integer value')),
                ('flt_value', models.FloatField(blank=True, db_index=True, null=True, verbose_name='float value')),
                ('str_value', models.CharField(blank=True, db_index=True, max_length=250, null=True, verbose_name='string value')),
                ('txt_value', models.TextField(blank=True, null=True, verbose_name='long string value')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.slotattribute')),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.slot')),
            ],
            options={
                'unique_together': {('slot', 'attribute')},
            },
        ),
        migrations.CreateModel(
            name='ProductWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', catalog.models.products.UpperCharField(db_index=True, max_length=30)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='words', related_query_name='word', to='catalog.product')),
            ],
            options={
                'unique_together': {('product', 'word')},
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('int_value', models.BigIntegerField(blank=True, db_index=True, null=True, verbose_name='integer value')),
                ('flt_value', models.FloatField(blank=True, db_index=True, null=True, verbose_name='float value')),
                ('str_value', models.CharField(blank=True, db_index=True, max_length=250, null=True, verbose_name='string value')),
                ('txt_value', models.TextField(blank=True, null=True, verbose_name='long string value')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', related_query_name='value', to='catalog.productattribute')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', related_query_name='value', to='catalog.product')),
            ],
            options={
                'unique_together': {('product', 'attribute')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('part_num', 'brand')},
        ),
    ]
